<html lang=ko>
<head>
	<script type="text/javascript" src="/assets/d3.v3.js"></script>
	<style>
	body {
	  font: 10px sans-serif;
	}

	.axis path,
	.axis line {
	  fill: none;
	  stroke: #000;
	  shape-rendering: crispEdges;
	}

	.x.axis path {
	  display: none;
	}

	.line {
	  fill: none;
	  stroke: steelblue;
	  stroke-width: 1.5px;
	}
	</style>
</head>
<body>
	<script type="text/javascript">
	var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

	var parseDate = d3.time.format("%Y-%m-%d").parse;

	var x = d3.time.scale()
	    .range([0, width]);

	var color = d3.scale.category10();

	var y = d3.scale.linear()
	    .range([height, 0]);

	var xAxis = d3.svg.axis()
	    .scale(x)
	    .orient("bottom");

	var yAxis = d3.svg.axis()
	    .scale(y)
	    .orient("left");

	var line = d3.svg.line()
		.interpolate("basis")
	    .x(function(d) { return x(d.key); })
	    .y(function(d) { return y(d.count); });

	var svg = d3.select("body").append("svg")
    	.attr("width", width + margin.left + margin.right)
    	.attr("height", height + margin.top + margin.bottom)
  		.append("g")
    	.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

	var url = '/reports/2013-04-01/2013-07-12/'		
	d3.json(url, function(error, data) {
		data = d3.entries(data);
		data = data.sort(function(a, b) {
			return d3.ascending(a.key, b.key);
		});

		color.domain(["none", "one", "two", "three"]);

		data.forEach(function(d) {
			d.key = parseDate(d.key);
		});

		var heads = color.domain().map(function(name) {
			return {
				name: name,
				values: data.map(function(d) {
					return {key: d.key, count: +d.value[name]};
				})
			};
		});

		x.domain(d3.extent(data, function(d) { return d.key; }));

		y.domain([
			d3.min(heads, function(h) { return d3.min(h.values, function(v) { return v.count; })}),
			d3.max(heads, function(h) { return d3.max(h.values, function(v) { return v.count; })})
			]);
  	    // y.domain(d3.extent(data, function(d) { return d.value; }));
  
	    svg.append("g")
  	        .attr("class", "x axis")
  	        .attr("transform", "translate(0," + height + ")")
  	        .call(xAxis);
  
	    svg.append("g")
  	        .attr("class", "y axis")
  	        .call(yAxis)
  	      	.append("text")
  	        .attr("transform", "rotate(-90)")
  	        .attr("y", 6)
  	        .attr("dy", ".71em")
  	        .style("text-anchor", "end")
  
		var head = svg.selectAll(".head")
			.data(heads)
			.enter().append("g")
			.attr("class", "city")

		head.append("path")
			.attr("class", "line")
			.attr("d", function(d) { return line(d.values); })
			.style("stroke", function(d) { return color(d.name); });

		head.append("text")
      		.datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      		.attr("transform", function(d) { return "translate(" + x(d.value.key) + "," + y(d.value.count) + ")"; })
      		.attr("x", 3)
      		.attr("dy", ".35em")
      		.text(function(d) { return d.name; });
	});
	</script>
</body>
</html>